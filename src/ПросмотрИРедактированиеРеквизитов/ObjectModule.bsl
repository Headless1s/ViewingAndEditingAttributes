
#Область СлужебныйПрограммныйИнтерфейс

Функция РеквизитТаблицаЗначений(Имя) Экспорт
	Возврат Новый РеквизитФормы(Имя, Новый ОписаниеТипов("ТаблицаЗначений"));		
КонецФункции

Функция РеквизитДинамическийСписок(Имя) Экспорт
	Возврат Новый РеквизитФормы(Имя, Новый ОписаниеТипов("ДинамическийСписок"));	
КонецФункции

Функция ПолучитьМассивПолейТаблицы(ТаблицаФормы, СписокПолейКроме = Неопределено) Экспорт
	
	МассивПолей = Новый Массив;
	
	ЗаполнитьМассивПолейРекурсивно(ТаблицаФормы.ПодчиненныеЭлементы, СписокПолейКроме, МассивПолей);
		
	Возврат МассивПолей;
	
КонецФункции

Процедура ДобавитьЭлементУсловногоОформления(Форма, ПутиЭлементовОтбора, Сравнение, Значение, ПутиПолейКомпоновки, ИмяПараметра, ЗначениеПараметра) Экспорт
		
	ЭлементУсловногоОформления = Форма.УсловноеОформление.Элементы.Добавить();
	КоллекцияЭлементовОтбора = ЭлементУсловногоОформления.Отбор.Элементы;
	
	Если ТипЗнч(ПутиЭлементовОтбора) = Тип("ТаблицаЗначений") Тогда
		ГруппаОтбора = ДобавитьГруппуОтбораУсловногоОформления(КоллекцияЭлементовОтбора, Сравнение); 
		Для каждого СтрокаПути Из ПутиЭлементовОтбора Цикл
			ДобавитьЭлементОтбораУсловногоОформления(ГруппаОтбора.Элементы, СтрокаПути.Путь, СтрокаПути.Сравнение, СтрокаПути.Значение);  	
		КонецЦикла;
	Иначе       
		ДобавитьЭлементОтбораУсловногоОформления(КоллекцияЭлементовОтбора, ПутиЭлементовОтбора, Сравнение, Значение);
	КонецЕсли; 	
	
	Если ТипЗнч(ПутиПолейКомпоновки) = Тип("Массив") Тогда
		Для каждого ПутьПолеКомпоновки Из ПутиПолейКомпоновки Цикл
			ПолеУсловногоОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ПолеУсловногоОформления.Поле = Новый ПолеКомпоновкиДанных(ПутьПолеКомпоновки);
		КонецЦикла;
	Иначе
		ПолеУсловногоОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ПолеУсловногоОформления.Поле = Новый ПолеКомпоновкиДанных(ПутиПолейКомпоновки);
	КонецЕсли; 	 
		
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра(ИмяПараметра, ЗначениеПараметра);
	ЭлементУсловногоОформления.Использование = Истина;	
	
КонецПроцедуры

Функция ПолучитьТаблицуЭлементовОтбора() Экспорт
	
	ТаблицаЭлементовОтбора = Новый ТаблицаЗначений;
	ТаблицаЭлементовОтбора.Колонки.Добавить("Путь");
	ТаблицаЭлементовОтбора.Колонки.Добавить("Сравнение");
	ТаблицаЭлементовОтбора.Колонки.Добавить("Значение");	
	
	Возврат ТаблицаЭлементовОтбора;
	
КонецФункции 

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ДобавитьЭлементОтбораУсловногоОформления(КоллекцияЭлементов, ПутьКРеквизиту, ВидСравнения, ПравоеЗначение)
	
	ЭлементОтбора = КоллекцияЭлементов.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКРеквизиту);
	ЭлементОтбора.ВидСравнения = ВидСравнения;
	ЭлементОтбора.ПравоеЗначение = ПравоеЗначение;		
	
	Возврат ЭлементОтбора;
	
КонецФункции

Функция ДобавитьГруппуОтбораУсловногоОформления(КоллекцияЭлементов, ТипГруппы)
	
	ЭлементГруппа = КоллекцияЭлементов.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ЭлементГруппа.ТипГруппы = ТипГруппы;
	
	Возврат ЭлементГруппа;
	
КонецФункции

Процедура ЗаполнитьМассивПолейРекурсивно(Коллекция, СписокПолейКроме, МассивПолей)
			
	Для каждого ЭлементТаблицы Из Коллекция Цикл	
		Если ТипЗнч(ЭлементТаблицы) = Тип("ГруппаФормы") Тогда
			ЗаполнитьМассивПолейРекурсивно(ЭлементТаблицы.ПодчиненныеЭлементы, СписокПолейКроме, МассивПолей);	
		Иначе
			Если СписокПолейКроме <> Неопределено Тогда
				Если СписокПолейКроме.Найти(ЭлементТаблицы.Имя) <> Неопределено Тогда
					Продолжить;
				КонецЕсли; 
			КонецЕсли;
			МассивПолей.Добавить(ЭлементТаблицы.Имя);	
		КонецЕсли;
	КонецЦикла;	
				
КонецПроцедуры
 
#КонецОбласти 

