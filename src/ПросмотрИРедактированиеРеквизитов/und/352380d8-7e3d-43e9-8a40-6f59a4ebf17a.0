{4,
{49,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,0},0,0,1,1,1,0,1,0,
{1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{35,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"Идентификатор",1,0,
{1,0},
{1,0},
{1,
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,1,
{0,ffab30f1-da11-44b5-b34c-24da22badcf4},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5006,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{2,1960479b-4d89-4eba-8b39-0aa802020558,"ИдентификаторНачалоВыбора",b50dc41b-c15a-4ebe-a17f-d01e51c47de6,"ИдентификаторОчистка",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1,b50dc41b-c15a-4ebe-a17f-d01e51c47de6,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ИдентификаторПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{22,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИдентификаторКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{12,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИдентификаторРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},3,3,0,0},"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{12,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{49,0}
},"&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИмяОбъекта = Параметры.ИмяОбъекта;
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ИмяОбъекта);
	
	СоздатьДинамическийСписокВыбора(ИмяОбъекта, ОбъектМетаданных);
	УстановитьЗаголовокФормы(ОбъектМетаданных);
	
	Если ЗначениеЗаполнено(Параметры.ТекущаяСсылка) Тогда
		Элементы.Список.ТекущаяСтрока = Параметры.ТекущаяСсылка;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДинамическийСписокВыбора(ИмяОбъекта, ОбъектМетаданных)
	
	ОбработкаОбъект = РеквизитФормыВЗначение(""Объект"");
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(ОбработкаОбъект.РеквизитДинамическийСписок(""Список""));
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	ЭтотОбъект.Список.ОсновнаяТаблица = ИмяОбъекта;
	ЭтотОбъект.Список.ДинамическоеСчитываниеДанных = Истина;
	
	ЭлементСписок = Элементы.Добавить(""Список"", Тип(""ТаблицаФормы""));
	
	ЭлементСписок.ПутьКДанным = ""Список"";
	ЭлементСписок.Отображение = ОтображениеТаблицы.Список;
	ЭлементСписок.РежимВыбора = Истина;
	
	ЭлементСписок.УстановитьДействие(""ВыборЗначения"", ""СписокВыборЗначения"");
	
	ЭтотОбъект.Список.УстановитьОбязательноеИспользование(""Ссылка"", Истина);
	
	ЧастиИмени = СтрРазделить(ИмяОбъекта, ""."");
	
	СтруктураРеквизитов = ПолучитьСтруктуруРеквизитов();
	НайтиРеквизитыПоСтруктуре(СтруктураРеквизитов, ОбъектМетаданных);
	
	Для каждого Реквизит Из СтруктураРеквизитов Цикл
		ПараметрыРеквизита = Реквизит.Значение;
		Если ПараметрыРеквизита.Найден Тогда
			ДобавитьЭлементКолонкуПоИмениРеквизита(Реквизит.Ключ);
			Если ПараметрыРеквизита.Сортировать Тогда
				ДобавитьЭлементПорядкаПоИмениРеквизита(Реквизит.Ключ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементПорядкаПоИмениРеквизита(Имя)
	
	Порядок = ЭтотОбъект.Список.Порядок.Элементы.Добавить(Тип(""ЭлементПорядкаКомпоновкиДанных""));
	Порядок.Поле = Новый ПолеКомпоновкиДанных(Имя);
	Порядок.Использование = Истина;
	Порядок.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Убыв;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементКолонкуПоИмениРеквизита(Имя)
	
	НоваяКолонка = Элементы.Добавить(""Список"" + Имя, Тип(""ПолеФормы""), Элементы.Список);
	НоваяКолонка.ПутьКДанным = ""Список."" + Имя;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы(ОбъектМетаданных)
	
	Если Не ПустаяСтрока(ОбъектМетаданных.ПредставлениеСписка) Тогда
		Заголовок = ОбъектМетаданных.ПредставлениеСписка;
	Иначе
		Заголовок = ОбъектМетаданных.Синоним;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруРеквизитов()
	
	СтруктураРеквизитов = Новый Структура();
	СтруктураРеквизитов.Вставить(""Дата"", Новый Структура(""Найден, Сортировать"", Ложь, Истина));
	СтруктураРеквизитов.Вставить(""Номер"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	СтруктураРеквизитов.Вставить(""Наименование"", Новый Структура(""Найден, Сортировать"", Ложь, Истина));
	СтруктураРеквизитов.Вставить(""Код"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	СтруктураРеквизитов.Вставить(""Сумма"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	СтруктураРеквизитов.Вставить(""СуммаДокумента"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	СтруктураРеквизитов.Вставить(""Контрагент"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	СтруктураРеквизитов.Вставить(""Владелец"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	СтруктураРеквизитов.Вставить(""Партнер"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	СтруктураРеквизитов.Вставить(""Организация"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	СтруктураРеквизитов.Вставить(""Склад"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	СтруктураРеквизитов.Вставить(""СкладОтправитель"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	СтруктураРеквизитов.Вставить(""СкладПолучатель"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	СтруктураРеквизитов.Вставить(""Номенклатура"", Новый Структура(""Найден, Сортировать"", Ложь, Ложь));
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

&НаСервереБезКонтекста
Процедура НайтиРеквизитыПоСтруктуре(СтруктураРеквизитов, ОбъектМетаданных)
	
	Для каждого Реквизит Из ОбъектМетаданных.СтандартныеРеквизиты Цикл
		
		Если СтруктураРеквизитов.Свойство(Реквизит.Имя) Тогда
			СтруктураРеквизитов[Реквизит.Имя].Найден = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
		
		Если СтруктураРеквизитов.Свойство(Реквизит.Имя) Тогда
			СтруктураРеквизитов[Реквизит.Имя].Найден = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Закрыть(Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторПриИзменении(Элемент)
	
	НачатьУстановкуОтбораПоСсылке();
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьУстановкуОтбораПоСсылке()
	
	Если ЭтоУникальныйИдентификатор(Идентификатор) Тогда
		
		НайденнаяСсылка = СсылкаПоУИД(ИмяОбъекта, Идентификатор);
		
		Если НайденнаяСсылка <> Неопределено Тогда
			
			УстановитьОтборПоСсылке(НайденнаяСсылка);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоСсылке(Ссылка)
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		
		ЭтотОбъект.Список.Отбор.Элементы.Очистить();
		
	Иначе
		
		ЭлементОтбора = ЭтотОбъект.Список.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(""Ссылка"");
		ЭлементОтбора.ПравоеЗначение = Ссылка;
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Идентификатор = Элемент.ТекстРедактирования;
	НачатьУстановкуОтбораПоСсылке();
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторОчистка(Элемент, СтандартнаяОбработка)
	
	Если ЭтоУникальныйИдентификатор(Идентификатор) Или ЭтоУникальныйИдентификатор(Элемент.ТекстРедактирования) Тогда
		УстановитьОтборПоСсылке(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоУникальныйИдентификатор(Знач Значение) Экспорт
	
	Шаблон = ""XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"";
	
	Если СтрДлина(Шаблон) <> СтрДлина(Значение) Тогда
		Возврат Ложь;
	КонецЕсли;
	Для Позиция = 1 По СтрДлина(Значение) Цикл
		// BSLLS:MagicNumber-off
		НевалидныйСимвол = КодСимвола(Шаблон, Позиция) = 88 // X
			И ((КодСимвола(Значение, Позиция) < 48 Или КодСимвола(Значение, Позиция) > 57) // 0..9
				И (КодСимвола(Значение, Позиция) < 97 Или КодСимвола(Значение, Позиция) > 102) // a..f
				И (КодСимвола(Значение, Позиция) < 65 Или КодСимвола(Значение, Позиция) > 70)) // A..F
			Или КодСимвола(Шаблон, Позиция) = 45 И КодСимвола(Значение, Позиция) <> 45; // -
		// BSLLS:MagicNumber-on
		Если НевалидныйСимвол Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция СсылкаПоУИД(ИмяОбъекта, УИД)
	
	НайденныеМетаданные = Метаданные.НайтиПоПолномуИмени(ИмяОбъекта);
	
	Если Метаданные.Справочники.Содержит(НайденныеМетаданные) Тогда
		ОбъектМенеджер = Вычислить(""Справочники."" + НайденныеМетаданные.Имя);
	ИначеЕсли Метаданные.Документы.Содержит(НайденныеМетаданные) Тогда
		ОбъектМенеджер = Вычислить(""Документы."" + НайденныеМетаданные.Имя);
	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(НайденныеМетаданные) Тогда
		ОбъектМенеджер = Вычислить(""ПланыВидовХарактеристик."" + НайденныеМетаданные.Имя);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Ссылка = ОбъектМенеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(УИД));
	
	Если Не Ссылка.Пустая() Тогда
		Возврат Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции",
{4,3,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",13798f33-dade-40a2-b410-353621be0d2b}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"Идентификатор",
{1,1,
{"ru","Идентификатор"}
},
{"Pattern",
{"S",36,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"ИмяОбъекта",
{1,1,
{"ru","Имя объекта"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}